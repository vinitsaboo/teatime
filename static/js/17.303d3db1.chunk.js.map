{"version":3,"file":"static/js/17.303d3db1.chunk.js","mappings":"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","sources":["json/index.js","webpack://gametime/./src/components/accordion/index.module.scss?f755","components/accordion/index.tsx","webpack://gametime/./src/pages/gameRounds/index.module.scss?a274","pages/gameRounds/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import * as GamesData from './gameData.json';\r\n\r\nexport default GamesData;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryBanner\":\"accordion_primaryBanner__jpOhG\",\"centerContainer\":\"accordion_centerContainer__tPbI3\",\"centerSections\":\"accordion_centerSections__+qgu6\",\"linkPrimary\":\"accordion_linkPrimary__S7feF\",\"whiteBanner\":\"accordion_whiteBanner__Efuos\",\"arrow\":\"accordion_arrow__yaT6i\",\"up\":\"accordion_up__zgcPi\",\"down\":\"accordion_down__S8v0m\",\"accordionHeader\":\"accordion_accordionHeader__QXmL+\",\"primaryAccordion\":\"accordion_primaryAccordion__2Ey5X\",\"title\":\"accordion_title__G4GtU\",\"activeDeck\":\"accordion_activeDeck__itY3K\",\"cardDescription\":\"accordion_cardDescription__oC5wP\"};","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { GameRoundItems } from '../../types/games';\r\nimport styles from './index.module.scss';\r\ninterface  AccordionItems{\r\n    data: GameRoundItems[];\r\n    category?: string;\r\n}\r\n\r\nconst Accordion:React.FC<AccordionItems> = ({data, category = ''}) => {\r\n    const propsData = data.map((record) => ({...record, isCollapse: false}));\r\n\r\n    const [accordionData, handleAccordionData] = useState(propsData);\r\n    \r\n    const handleAccordionClick = (id: string):void => {\r\n        const updatedAccordionData =  accordionData.map(data => ({\r\n            ...data,\r\n            isCollapse: id === data.id && !data.isCollapse\r\n        }))\r\n        handleAccordionData(updatedAccordionData)\r\n    }\r\n\r\n    const accordionStructure = (items:GameRoundItems[]) => items.map(({id, isCollapse, title, description, roundName}) => {\r\n        return (\r\n            <div key={id} className={`${styles.primaryAccordion} ${styles[isCollapse ? 'activeDeck' : 'normal']}`}>\r\n                <div className={styles.accordionHeader} onClick={() => handleAccordionClick(id)}>\r\n                    <h4 className={styles.title} >{title}</h4>\r\n                    <i className={`${styles.arrow} ${styles[isCollapse ? 'up' : 'down']}`}></i>\r\n                </div>\r\n                {isCollapse && \r\n                <div>\r\n                    <p className={styles.cardDescription}>{description}</p>\r\n                    <Link className={styles.linkPrimary} to ={`/games/${category}/${roundName}`}>Start game</Link>\r\n                </div>\r\n                }\r\n            </div>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <>\r\n            {accordionStructure(accordionData)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Accordion;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryBanner\":\"gameRounds_primaryBanner__iKnDQ\",\"centerContainer\":\"gameRounds_centerContainer__A24xZ\",\"categoryPageWrapper\":\"gameRounds_categoryPageWrapper__Z2n0Y\",\"centerSections\":\"gameRounds_centerSections__fspJO\",\"linkPrimary\":\"gameRounds_linkPrimary__lF1be\",\"whiteBanner\":\"gameRounds_whiteBanner__7AFzG\",\"arrow\":\"gameRounds_arrow__aDuBI\",\"up\":\"gameRounds_up__zcjxJ\",\"down\":\"gameRounds_down__P9Kl-\"};","import {useContext, useEffect, useState} from 'react';\r\nimport Accordion from '../../components/accordion';\r\nimport { SelectedGameContext } from '../../context/gameLevelContext';\r\nimport GamesData from '../../json';\r\nimport { GameNames, GameRoundItems } from '../../types/games';\r\nimport styles from './index.module.scss';\r\n\r\nconst GameCategory = () => {\r\n\tconst {selectedGameDetails} = useContext(SelectedGameContext);\r\n\tconst [gameRounds, updateGameRounds] = useState<GameRoundItems[] | null>(null);\r\n\tuseEffect(() => {\r\n\t\tif(!selectedGameDetails) return;\r\n\t\tconst {category} = selectedGameDetails;\r\n\t\tupdateGameRounds(GamesData[category as keyof GameNames])\r\n\t},[])\r\n\r\n\t\tconst mapAccordionData = () => {\r\n\t\t\tif(!gameRounds) return;\r\n\t\t\treturn (\r\n\t\t\t\t<Accordion data = {gameRounds} category={selectedGameDetails?.category} />\r\n\t\t\t)\r\n\t\t};\r\n\t\t\r\n\treturn (\r\n\t\t<section className={styles.categoryPageWrapper}>\r\n\t\t\t<h3 className={styles.primaryBanner}>GameCategory Page</h3>\r\n\t\t\t<section className={styles.centerSections}>\r\n\t\t\t\t{mapAccordionData()}\r\n\t\t\t</section>\r\n\t\t</section>\r\n\t)\r\n}\r\n\r\nexport default GameCategory;\r\n\r\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["items","data","category","propsData","map","record","isCollapse","useState","accordionData","handleAccordionData","id","title","description","roundName","className","styles","onClick","updatedAccordionData","handleAccordionClick","to","selectedGameDetails","useContext","SelectedGameContext","gameRounds","updateGameRounds","useEffect","GamesData","mapAccordionData","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}