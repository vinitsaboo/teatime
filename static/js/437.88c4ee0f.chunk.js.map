{"version":3,"file":"static/js/437.88c4ee0f.chunk.js","mappings":"0zBAEA,E,8ICDA,EAA2B,wB,SCQdA,EAAY,SAAH,GAAkC,IAA7BC,EAAK,EAALA,MACvB,OACI,wBAAKA,GAEb,EAoBA,EAlBmC,SAAH,GAAkC,IAA7BC,EAAI,EAAJA,KAAMC,EAAgB,EAAhBA,iBAWvC,OACD,8BAXmB,WACpB,GAAID,EAAKE,OACR,OAAOF,EAAKG,KAAI,SAACC,EAAQC,GAAG,OAC3B,qBAAmBC,UAAWC,EAAiBC,QAAS,kBAAMP,EAAiBG,EAAO,EAAC,WACtF,SAACN,EAAS,CAACC,MAAOK,EAAOL,QACxBK,EAAOK,YAAYP,QAAS,uBAAIE,EAAOK,cAAkB,OAF7CJ,EAGJ,GAEV,CAICK,IAGL,EC9BA,EAA6K,mCAA7K,EAA8N,+BC2C9N,EApCuB,SAACC,GACtB,OAAoCC,EAAAA,EAAAA,eAAqCC,GAAU,eAA5EC,EAAS,KAAEC,EAAc,KAChC,GAA8CC,EAAAA,EAAAA,YAAWC,EAAAA,GAAlDC,EAAc,EAAdA,eAAgBC,EAAmB,EAAnBA,oBACfC,GAAWC,EAAAA,EAAAA,OAEnBC,EAAAA,EAAAA,YAAU,WACTP,GAAe,OAAIQ,EAAAA,EAAAA,cACpB,GAAG,IAGH,IAQMC,EAAkB,SAACC,GACxBC,QAAQC,IAAIF,GACZ,IAAMG,EAAkBH,EAAW1B,MAAM8B,MAAM,KAAKC,KAAK,KAAKC,cAC9Db,GAAe,kBAAIC,GAAmB,IAAEa,SAAUJ,KAClDR,EAAS,UAAD,OAAWQ,GACpB,EAEE,OACD,qBAAStB,UAAWC,EAAuB,WAC3C,6CACC,oBAASD,UAAWC,EAAmB,SAlBnB,WACrB,GAAa,OAATO,QAAS,IAATA,GAAAA,EAAWZ,OACf,OAAO,SAAC,EAAK,CAACF,KAAMc,EAAWb,iBAAkB,SAACwB,GAAc,OAAKD,EAAgBC,EAAW,GAIjG,CAaIQ,KAEDtB,EAAMuB,WAGX,C,mECzCA,SAASC,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GACvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAC3CC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UACtD,KAAKP,EAAKQ,KAAKC,MAAMT,EAAMG,EAC7B,CACA,OAAOH,CACT,CACe,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUjD,OAAQgD,IAAK,CACzC,IAAIE,EAAS,MAAQD,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIf,EAAQI,OAAOa,IAAS,GAAIC,SAAQ,SAAUhD,IACpD,OAAe4C,EAAQ5C,EAAK+C,EAAO/C,GACrC,IAAKkC,OAAOe,0BAA4Bf,OAAOgB,iBAAiBN,EAAQV,OAAOe,0BAA0BF,IAAWjB,EAAQI,OAAOa,IAASC,SAAQ,SAAUhD,GAC5JkC,OAAOiB,eAAeP,EAAQ5C,EAAKkC,OAAOK,yBAAyBQ,EAAQ/C,GAC7E,GACF,CACA,OAAO4C,CACT,C","sources":["json/index.js","webpack://gametime/./src/components/cards/index.module.scss?4e85","components/cards/index.tsx","webpack://gametime/./src/pages/dashboard/index.module.scss?695c","pages/dashboard/index.tsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import * as GamesData from './gameData.json';\r\n\r\nexport default GamesData;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"cardItem\":\"cards_cardItem__sjuwW\",\"lg-cardTitle\":\"cards_lg-cardTitle__pRqrJ\"};","import React, { useState } from 'react';\r\nimport { TeaTimeGames } from '../../types/games';\r\nimport styles from './index.module.scss';\r\n\r\ninterface CardsData {\r\n    data: TeaTimeGames[];\r\n    selectedCardData: (record:Object) => void\r\n}\r\n\r\nexport const CardTitle = ({title}: {title: string}) => {\r\n    return (\r\n        <h3>{title}</h3>\r\n    )\r\n}\r\n\r\nconst Cards: React.FC<CardsData> = ({data, selectedCardData}) => {\r\n\tconst mapCardsData = () => {\r\n\t\tif(!data.length) return;\r\n\t\t\treturn data.map((record, key) => \r\n\t\t\t\t<section key={key} className={styles.cardItem} onClick={() => selectedCardData(record)}>\r\n\t\t\t\t\t<CardTitle title={record.title} />\r\n\t\t\t\t\t{record.description.length ? <p>{record.description}</p>: null}\r\n\t\t\t\t</section>\r\n\t\t\t)\r\n    }\r\n\r\n    return (\r\n\t\t\t<>\r\n\t\t\t\t{mapCardsData()}\r\n\t\t\t</>\r\n    )\r\n}\r\n\r\nexport default Cards;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"whiteHeaders\":\"dashboard_whiteHeaders__1FxRx\",\"bannerHeads\":\"dashboard_bannerHeads__7Apb2\",\"pageHeadings\":\"dashboard_pageHeadings__xilAb\",\"gameCardWrapper\":\"dashboard_gameCardWrapper__dsIth\",\"gameSection\":\"dashboard_gameSection__x2lnu\"};","import {useState, useEffect, useContext} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { SelectedGameContext } from '../../context/gameLevelContext';\r\nimport GamesData from '../../json';\r\nimport { TeaTimeGames } from '../../types/games';\r\nimport Cards from './../../components/cards';\r\nimport styles from './index.module.scss';\r\n\r\nconst GamesDashboard = (props:any) => {\r\n\t\tconst [gamesList, fetchGamesList] = useState<TeaTimeGames[] | undefined>(undefined);\r\n\t\tconst {updateGameInfo, selectedGameDetails} = useContext(SelectedGameContext);\r\n    const navigate = useNavigate();\r\n\r\n\t\tuseEffect(() => {\r\n\t\t\tfetchGamesList([...GamesData.teatimeGames]);\r\n\t\t}, []);\r\n\r\n\r\n\t\tconst fetchGameList = () => {\r\n\t\t\tif(!gamesList?.length) return;\r\n\t\t\treturn <Cards data={gamesList} selectedCardData={(recordInfo:any) => handleGameClick(recordInfo)} />\r\n\t\t\t// return Object.values(gamesList).map((data, key) => \r\n\t\t\t// \t<dt className={styles.gameListItem} key={`game_${key}`} onClick={() => handleGameClick(key)}>{data}</dt>\r\n\t\t\t// )\r\n\t\t}\r\n\r\n\t\tconst handleGameClick = (recordInfo:TeaTimeGames) => {\r\n\t\t\tconsole.log(recordInfo);\r\n\t\t\tconst currentGameName = recordInfo.title.split(' ').join('_').toLowerCase();\r\n\t\t\tupdateGameInfo({...selectedGameDetails, category: currentGameName})\r\n\t\t\tnavigate(`/games/${currentGameName}`);\r\n\t\t}\r\n\t\t\r\n    return (\r\n\t\t\t<section className={styles.gameCardWrapper}>\r\n\t\t\t<h3>Games Dashboard</h3>\r\n\t\t\t\t<section className={styles.gameSection}>\t\r\n\t\t\t\t\t{fetchGameList()}\r\n\t\t\t\t</section>\t\t\t\t\t \r\n\t\t\t\t{props.children}\r\n\t\t\t</section>\r\n    )\r\n}\r\n\r\nexport default GamesDashboard;\r\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}"],"names":["CardTitle","title","data","selectedCardData","length","map","record","key","className","styles","onClick","description","mapCardsData","props","useState","undefined","gamesList","fetchGamesList","useContext","SelectedGameContext","updateGameInfo","selectedGameDetails","navigate","useNavigate","useEffect","GamesData","handleGameClick","recordInfo","console","log","currentGameName","split","join","toLowerCase","category","fetchGameList","children","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}